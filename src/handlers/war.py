# coding=UTF-8

from config import settings
from datetime import datetime, time
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, filters

import utils


JOB_NAME = 'morning_message'


def create_handlers() -> list:
    """Creates handlers that process piece/war modes."""
    war_handler = CommandHandler(
        'war', war_on,
        filters.User(username=settings.ADMINS) & filters.Chat(settings.CHAT_ID))
    war_off_handler = CommandHandler(
        'war_off', war_off,
        filters.User(username=settings.ADMINS) & filters.Chat(settings.CHAT_ID))
    return [war_handler, war_off_handler]


def war_on(_: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Switch to the war mode (morning minute of silence)."""
    war_on(context.application)


def war_on(app: Application) -> None:
    """Switch to the war mode (morning minute of silence)."""
    utils.log('war_on')
    if not app.job_queue.get_jobs_by_name(JOB_NAME):
        utils.log(f'job_added: {JOB_NAME}')
        app.job_queue.run_daily(
            morning_message,
            time.fromisoformat(settings.MORNING_TIME),
            name=JOB_NAME)


def war_off(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Switch to the piece mode."""
    utils.log('war_off')
    utils.clear_jobs(context.application, JOB_NAME)


async def morning_message(context: ContextTypes.DEFAULT_TYPE) -> None:
    """Send morning message and add a new timer."""
    utils.log('morning_message')
    war_start_date = datetime.strptime(settings.WAR_START_DATE, settings.DATE_FORMAT)
    days_since_war_started = (datetime.today() - war_start_date).days + 1;
    message = (f'*–î–µ–Ω—å {days_since_war_started} –≥–µ—Ä–æ—ó—á–Ω–æ–≥–æ —Å–ø—Ä–æ—Ç–∏–≤—É —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –Ω–∞—Ä–æ–¥—É*\n'
    'üïØ –©–æ–¥–µ–Ω–Ω–∞ —Ö–≤–∏–ª–∏–Ω–∞ –º–æ–≤—á–∞–Ω–Ω—è –∑–∞ —É–∫—Ä–∞—ó–Ω—Ü—è–º–∏, —è–∫—ñ –≤—ñ–¥–¥–∞–ª–∏ —Å–≤–æ—î –∂–∏—Ç—Ç—è, '
    '–∑–∞ –≤—Å—ñ–º–∞, —Ö—Ç–æ –º—ñ–≥ –±–∏ —â–µ –∂–∏—Ç–∏, —è–∫–±–∏ ‚Çö–æ—Å—ñ—è –Ω–µ –ø–æ—á–∞–ª–∞ —Ü—é –≤—ñ–π–Ω—É.')
    await context.bot.sendMessage(
        chat_id=settings.CHAT_ID, text=message)
